#!/bin/bash
# üß™ –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã booking-service –∏ booking-history-service

# –¶–≤–µ—Ç–∞ –∏ –∏–∫–æ–Ω–∫–∏
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'
CHECK="‚úÖ"
CROSS="‚ùå"
WARN="‚ö†Ô∏è"
ARROW="‚û°Ô∏è"
CLOCK="‚è≥"
DB="üóÑÔ∏è"
LOGS="ü™µ"
KAFKA="üì°"

log_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}${CHECK} $2${NC}"
    else
        echo -e "${RED}${CROSS} $2${NC}"
        echo -e "${YELLOW}${WARN} –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:${NC}"
        cat /tmp/last_error.txt 2>/dev/null
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
check_db_connection() {
    local CONTAINER=$1
    local USER=$2
    local NAME=$3

    echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ${NAME} –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ ${CONTAINER}..."
    for i in {1..10}; do
        docker exec -i "$CONTAINER" pg_isready -U "$USER" -d "$NAME" >/dev/null 2>&1 && break
        echo "‚è≥ –ë–∞–∑–∞ ${NAME} –Ω–µ –≥–æ—Ç–æ–≤–∞, –ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑..."
        sleep 5
    done

    docker exec -i "$CONTAINER" pg_isready -U "$USER" -d "$NAME" >/dev/null 2>&1 || {
        echo "‚ùå –ë–∞–∑–∞ ${NAME} –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ ${CONTAINER} –Ω–µ –≥–æ—Ç–æ–≤–∞"
        exit 1
    }

    echo "‚úÖ –ë–∞–∑–∞ ${NAME} –≥–æ—Ç–æ–≤–∞"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–∫—Å—Ç—É—Ä —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
load_fixtures() {
    local CONTAINER=$1
    local USER=$2
    local NAME=$3
    local FILE=$4

    echo "üß™ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (fixtures) –≤ ${NAME} —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ${CONTAINER}..."
    docker exec -i "$CONTAINER" psql -U "$USER" -d "$NAME" < "$FILE" \
      && echo "‚úÖ –§–∏–∫—Å—Ç—É—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã" \
      || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–∫—Å—Ç—É—Ä"; exit 1; }
}

# -------------------
# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫
# -------------------

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–∫—Å—Ç—É—Ä –≤ booking-db
check_db_connection "booking-db" "booking" "booking"
load_fixtures "booking-db" "booking" "booking" "init-fixtures.sql"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–∫—Å—Ç—É—Ä –≤ history-db
check_db_connection "history-db" "history" "history"
# –ï—Å–ª–∏ –≤ history-db –Ω—É–∂–Ω—ã —Ñ–∏–∫—Å—Ç—É—Ä—ã, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∏ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª
# load_fixtures "history-db" "history" "history" "history-fixtures.sql"

sleep 5  # –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤

# –¢–µ—Å—Ç REST —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –º–æ–Ω–æ–ª–∏—Ç–∞
echo -e "${ARROW} –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST-—ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –º–æ–Ω–æ–ª–∏—Ç–∞..."
curl -s -X POST "http://localhost:8084/api/bookings?userId=user_test&hotelId=hotel_test&promoCode=SUMMER20" \
    -o /tmp/rest_booking_response.json

if [ $? -eq 0 ] && [ -s /tmp/rest_booking_response.json ]; then
    log_result 0 "–°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ REST —É—Å–ø–µ—à–Ω–æ"
else
    log_result 1 "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ REST —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –º–æ–Ω–æ–ª–∏—Ç–∞"
fi

echo "üìÑ –û—Ç–≤–µ—Ç –º–æ–Ω–æ–ª–∏—Ç–∞:"
cat /tmp/rest_booking_response.json

# –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π Kafka
echo "${CLOCK} –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π Kafka (10 —Å–µ–∫)..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã Bookings
echo "${DB} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã Bookings –≤ booking-db..."
docker exec -i booking-db psql -U booking -d booking -c 'SELECT * FROM "Bookings";' > /tmp/bookings_table.txt 2>/tmp/last_error.txt
cat /tmp/bookings_table.txt

if grep -q "user_test" /tmp/bookings_table.txt; then
    log_result 0 "–¢–∞–±–ª–∏—Ü–∞ Bookings —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø–∏—Å—å user_test"
else
    log_result 1 "–¢–∞–±–ª–∏—Ü–∞ Bookings –ø—É—Å—Ç–∞ –∏–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã History
echo "${DB} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã History –≤ history-db..."
docker exec -i history-db psql -U history -d history -c 'SELECT * FROM "History";' > /tmp/history_table.txt 2>/tmp/last_error.txt
cat /tmp/history_table.txt

if grep -q "user_test" /tmp/history_table.txt || grep -q "confirmed" /tmp/history_table.txt; then
    log_result 0 "–ò—Å—Ç–æ—Ä–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞"
else
    log_result 1 "–¢–∞–±–ª–∏—Ü–∞ History –ø—É—Å—Ç–∞ –∏–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–æ–≤
for SERVICE in booking-service booking-history-service; do
    echo "${LOGS} –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ ${SERVICE}..."
    docker logs "${SERVICE}" > "/tmp/${SERVICE}_logs.txt" 2>/tmp/last_error.txt
    if grep -q "booking" "/tmp/${SERVICE}_logs.txt" || grep -q "Saved" "/tmp/${SERVICE}_logs.txt"; then
        log_result 0 "–õ–æ–≥–∏ ${SERVICE} —Å–æ–¥–µ—Ä–∂–∞—Ç –∑–∞–ø–∏—Å–∏"
    else
        log_result 1 "–õ–æ–≥–∏ ${SERVICE} –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö –∑–∞–ø–∏—Å–µ–π"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Kafka
echo "${KAFKA} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–ø–∏–∫–∞ booking-confirmed..."
docker exec -i kafka kafka-console-consumer \
    --bootstrap-server kafka:9092 \
    --topic booking-confirmed \
    --timeout-ms 5000 \
    --from-beginning > /tmp/kafka_confirmed.txt 2>/tmp/last_error.txt

if [ -s /tmp/kafka_confirmed.txt ]; then
    log_result 0 "Kafka topic booking-confirmed —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
else
    log_result 1 "Kafka topic booking-confirmed –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo -e "${GREEN}${CHECK} –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /tmp/*.txt –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.${NC}"
